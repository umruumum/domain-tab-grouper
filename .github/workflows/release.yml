name: Release Chrome Extension

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from tag or input
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Validate version format
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format v*.*.* (e.g., v1.0.0)"
            exit 1
          fi

      - name: Check manifest.json version
        run: |
          MANIFEST_VERSION=$(jq -r '.version' manifest.json)
          TAG_VERSION="${{ steps.version.outputs.version_number }}"
          
          echo "Manifest version: $MANIFEST_VERSION"
          echo "Tag version: $TAG_VERSION"
          
          if [ "$MANIFEST_VERSION" != "$TAG_VERSION" ]; then
            echo "Warning: manifest.json version ($MANIFEST_VERSION) does not match tag version ($TAG_VERSION)"
            echo "This is not an error, but consider updating manifest.json"
          fi

      - name: Create extension package
        run: |
          # Create temporary directory for extension files
          mkdir -p extension-package
          
          # Copy required files for Chrome extension
          cp manifest.json extension-package/
          cp background.js extension-package/
          cp popup.html extension-package/
          cp popup.js extension-package/
          
          # Copy icons if they exist
          if [ -d "icons" ]; then
            cp -r icons extension-package/
          fi
          
          # Create zip file
          cd extension-package
          zip -r "../domain-tab-grouper-${{ steps.version.outputs.version }}.zip" .
          cd ..
          
          echo "Package created: domain-tab-grouper-${{ steps.version.outputs.version }}.zip"
          ls -la *.zip

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Create detailed Japanese release notes
          cat > release_notes.md << EOF
          ## 🎉 Domain Tab Grouper $VERSION
          
          ドメインベースでタブを自動グループ化するChrome拡張機能のリリースです。
          
          ## ✨ 主な機能
          
          ### 🔄 自動グループ化
          - **効率的グループ化**: 同じドメインのタブが2つ以上ある場合に自動グループ化
          - **自動グループ解除**: グループが1つのタブになった時に自動解除
          - **リアルタイム検知**: タブ作成・ページ遷移を即座に検知
          - **スマート移動**: ドメイン変更時に適切なグループへ自動移動
          
          ### 🎨 視覚的管理
          - **色分け表示**: ドメインごとに異なる色でグループを識別
          - **ウィンドウ別管理**: 各ウィンドウで独立したグループ管理
          - **クリーンUI**: 直感的で使いやすいポップアップインターフェース
          
          ### ⚙️ 柔軟な制御
          - **ON/OFF切り替え**: 自動グループ化の有効・無効をワンクリック
          - **手動操作**: いつでも手動でグループ化・解除が可能
          - **除外ドメイン設定**: 特定のドメインをグループ化から除外（ワイルドカード対応）
          - **設定永続化**: 設定は自動保存され、再起動後も維持
          
          ## 📦 インストール方法
          
          1. \`domain-tab-grouper-$VERSION.zip\` ファイルをダウンロード
          2. ファイルを解凍
          3. Chromeで拡張機能を読み込み:
             - \`chrome://extensions/\` を開く
             - 「デベロッパーモード」を有効化
             - 「パッケージ化されていない拡張機能を読み込む」をクリックして解凍したフォルダを選択
          
          ## 🚀 使用例
          
          \`\`\`
          例: google.com のタブが2つ以上ある場合
          → 「google.com」という名前のグループが自動作成される
          
          例: 単一のタブの場合
          → グループ化せずに通常のタブのまま
          
          例: グループが1つのタブになった場合
          → 自動的にグループが解除され、通常のタブに戻る
          
          例: 除外ドメイン設定
          → "example.com" または "*.example.com" を追加
          → 該当ドメインはグループ化されなくなる
          \`\`\`
          
          ## 🛠️ 技術仕様
          
          - **Manifest Version**: 3.0
          - **必要な権限**: \`tabs\`, \`tabGroups\`, \`activeTab\`, \`storage\`
          - **対応ブラウザ**: Chrome（Chromium系ブラウザでも動作可能）
          
          ---
          
          <div align="center">
          Made with ❤️ for better browsing experience
          </div>
          EOF
          
          echo "release_notes_file=release_notes.md" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "Domain Tab Grouper ${{ steps.version.outputs.version }}"
          body_path: ${{ steps.release_notes.outputs.release_notes_file }}
          files: |
            domain-tab-grouper-${{ steps.version.outputs.version }}.zip
          draft: false
          prerelease: false
          generate_release_notes: false

      - name: Release Summary
        run: |
          echo "🎉 Release created successfully!"
          echo "📦 Package: domain-tab-grouper-${{ steps.version.outputs.version }}.zip"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }}"